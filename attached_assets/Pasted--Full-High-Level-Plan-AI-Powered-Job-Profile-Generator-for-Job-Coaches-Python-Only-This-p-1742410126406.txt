P.L.A.N (Please Lets Achieve Number1) for Job Coach Empower and Advocate
Team names: 

John-Paul Anderson ‚Äì Active 
Shodipe Opeoluwa - Active
	Navod Dinidu Ranasingha ‚Äì Active

Helping job coaches be more productive.
‚Ä¢	A tool for job coaches to quickly and effectively generate high-quality job profiles for candidates.  
‚Ä¢	AI-assisted skills assessment to help job coaches understand strengths & job fit more efficiently.  
‚Ä¢	Speech-to-text support to make the process more accessible for people with disabilities.  
‚Ä¢	Assisting Real People hidden from the job market for their capabilities in diverse roles.
‚Ä¢	Assisting government programs around the world to easily include this talent.
Problem Statement: Job coaches spend too much time writing job profiles manually. Our AI-powered tool helps coaches generate high-quality job profiles in minutes by analyzing spoken candidate experiences and extracting key skills and strengths. This reduces admin work, improves job matching, and empowers more people with disabilities to enter the workforce.
Microsoft Scope - Matches With Us ‚Äì JobCoach AI	
Microsoft Brief Requirement	Empower and Advocate The Job Coach AI-Powered Solution
üü¢ Job assessment & matching	AI extracts skills & strengths from spoken input to generate a structured job profile.
üü¢ Reduce administrative burden	Job coaches can quickly generate profiles using AI instead of manually writing them.
üü¢ Personalized training & support	AI identifies skill gaps & recommends training.
üü¢ Motivational support	AI-generated profiles emphasize candidates‚Äô strengths & achievements, helping coaches advocate for them.

An AI-powered assistant for job coaches.  

MVP Scope (24-Hour Hackathon)

 Core Features
1. Speech-to-Text AI for Job Coaches  
   - Job coach records candidate‚Äôs spoken experiences.  
   - AI converts speech to structured text.

2. AI-Powered Job Profile Generator  
   - Azure Text Analytics extracts skills & experience.  
   - Azure OpenAI GPT-4 generates a well-structured job profile.  
   - Profiles emphasize strengths, past experience, and job fit.

3. Simple Web App (Python)  
   - Job coach uploads candidate audio or types text.  
   - AI processes the data in seconds.  
   - The final job profile is displayed & downloadable.

Judging Criteria

1. Solution Performance (25%) - Does it work?

Does the solution function as intended? 
YES-

‚Ä¢	The FastAPI backend ensures smooth AI processing.
‚Ä¢	Speech-to-Text works for accessible input.
‚Ä¢	AI-generated job profiles are structured and relevant.
‚Ä¢	Profiles can be stored & retrieved from Azure Blob Storage.
‚Ä¢	The Streamlit UI (optional) works, allowing job coaches to use the tool easily.
üí° Rating: Strong performance (‚úÖ Should meet full 25% requirement).

 2. Innovation (25%) - Is it a new approach?
YES-

New approach to job coaching:

‚Ä¢	AI-assisted job profile generation is faster and more inclusive.
‚Ä¢	Speech-based input makes it accessible for differently-abled individuals.
‚Ä¢	AI automates skill extraction instead of manual job coach assessments.
‚Ä¢	No other solutions exist that allow job coaches to use AI this way.
üí° Rating: Very innovative (‚úÖ Strong 25% potential).





3. Adherence to Microsoft Responsible AI Standards (25%)
YES-

Alignment with Microsoft's Responsible AI principles:

‚Ä¢	Fairness ‚Üí Inclusive speech input supports job seekers with disabilities.
‚Ä¢	Reliability & Safety ‚Üí Uses Azure Cognitive Services, ensuring accurate AI results.
‚Ä¢	Privacy & Security ‚Üí No personal data stored, just job profiles in secure Blob Storage.
‚Ä¢	Inclusiveness ‚Üí Enhances access for people with disabilities.
‚Ä¢	Transparency ‚Üí Job coaches remain in control over final profile edits.
üí° Rating: Meets Responsible AI principles (‚úÖ Should get full 25%).

 4. Breadth of Azure Tools Used (25%)
YES-
Uses multiple Azure services:
‚Ä¢	Azure Service	Purpose
‚Ä¢	Azure OpenAI (GPT-4 Turbo)	Generates optimized job profiles.
‚Ä¢	Azure Speech-to-Text	Allows candidates to speak their experiences.
‚Ä¢	Azure Text Analytics	Extracts skills & strengths from transcripts.
‚Ä¢	Azure Blob Storage	Stores job profiles & audio securely.
‚Ä¢	Azure Functions (Python)	Hosts serverless backend API.
üí° Rating: Uses 5+ key Azure tools (Should score highly on breadth).




















Work Phases

Full High-Level Plan: AI-Powered Job Profile Generator for Job Coaches (Python-Only)
This plan is a full end-to-end breakdown‚Äîno need for iteration. We will execute in 5-minute blocks.


 Finalized MVP Scope (24 Hours)

Goal: Build an AI-powered job profile generator that allows job coaches to input candidate details (via speech or text) and receive a structured job profile using Azure AI services.

Backend API -FastAPI (Python)
AI Model ‚Äì Azure OpenAI
Speech To Text ‚Äì Azure Cognitive Services (Speech API)
Skill Extraction ‚Äì Azure Text Analytics
Storage ‚Äì Azure Blob Storage
UI ‚Äì Streamlit
Deployment ‚Äì Azure Functions

Component	Technology
Backend API	FastAPI (Python)
AI Model	Azure OpenAI (GPT-4)
Speech to Text	Azure Cognitive Services (Speech API)
Skill Extraction	Azure Text Analytics
Storage	Azure Blob Storage (for profiles & audio)
UI (Optional)	Streamlit (for Python-based frontend)
Deployment	Azure Functions (Python) for API


Phase 1: Azure Setup (30-45 Minutes)
Azure Resources to Create
1Ô∏è Azure OpenAI Service ‚Üí Generates job profiles.  
2Ô∏è Azure Speech to Text ‚Üí Converts spoken job experience into text.  
3Ô∏è Azure Text Analytics ‚Üí Extracts skills & job experience from text.  
4Ô∏è Azure Blob Storage ‚Üí Stores audio & generated profiles.  
5Ô∏è Azure Functions ‚Üí Hosts FastAPI backend as serverless functions.  


Phase 2: Backend Development (FastAPI) (3-4 Hours)
FastAPI Endpoints

Endpoint	Function
POST /upload-audio	Converts audio to text (Azure Speech-to-Text).
POST /generate-profile	Uses GPT-4 to generate job profile.
GET /download-profile/{id}	Fetches previously generated profiles.

Backend Logic
‚úÖ Upload Audio ‚Üí Send audio file to Azure Speech API, get transcribed text.  
‚úÖ Extract Skills ‚Üí Run Azure Text Analytics to detect strengths & skills.  
‚úÖ Generate Profile ‚Üí Send extracted info to GPT-4, get a structured job profile.  
‚úÖ Store Profile ‚Üí Save job profile in Azure Blob Storage.  
‚úÖ Retrieve Profile ‚Üí Fetch stored job profiles using profile ID.  



Phase 3: Simple UI (Optional - 2 Hours)
Option 1: CLI Interface (Command-Line)
If no UI needed, we interact via terminal:  
- Upload audio  
- See transcribed text  
- Generate job profile  
- Download profile  


Option 2: Streamlit Web UI (Python-Based)
Simple Web App:  
Upload voice recording  
Live transcription preview  
AI-generated job profile  
Download profile  


Phase 4: Deployment (2-3 Hours)
1Ô∏è Deploy API on Azure Functions (FastAPI).  
2Ô∏è Deploy UI (if using Streamlit) on Azure App Service.  
3Ô∏è Rest API with Postman to verify endpoints.  
4Ô∏è Ensure everything works in Azure.  
























Execution Plan

Phase 1: Azure Setup (5 min each)
- [ ] Create Azure OpenAI (GPT-4 Turbo)  
- [ ] Create Azure Speech-to-Text Service  
- [ ] Create Azure Text Analytics Service  
- [ ] Create Azure Blob Storage  
- [ ] Create Azure Functions App (Python-based API)  

 Phase 2: Backend API (5 min each)
- [ ] Set up FastAPI project  
- [ ] Implement `/upload-audio` (Speech-to-Text)  
- [ ] Implement `/generate-profile` (GPT-4 AI)  
- [ ] Implement `/download-profile` (fetch previous results)  
- [ ] Deploy backend to Azure Functions  

Phase 3: UI (Optional) (5 min each)
- [ ] Create Streamlit UI for file upload & AI processing  
- [ ] Integrate API calls for Speech-to-Text  
- [ ] Integrate API calls for Profile Generation (GPT-4)  
- [ ] Add Download Profile button  
- [ ] Deploy Streamlit UI to Azure App Service  

 Phase 4: Deployment & Testing (5 min each)
- [ ] Deploy FastAPI to Azure Functions  
- [ ] Test API using Postman  
- [ ] Deploy UI (Streamlit to Azure App Service)  
- [ ] Final debugging & cleanup  
- [ ] Submit Hackathon MVP! üéâ  


